name: Sigma Detection Pipeline

on:
  push:
    branches:
      - dev
    paths:
      - 'rules/**'
  pull_request:
    branches:
      - dev
    paths:
      - 'rules/**'

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: dev
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Validate Sigma Rules
        run: python ci-scripts/validate_rules.py

  test_rules:
    needs: validate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: dev
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Test Sigma Rules with Sample Logs
        run: python ci-scripts/test_sigma_rules.py rules/ test/

  merge_passed_rules:
    needs: [validate, test_rules]
    runs-on: ubuntu-latest
    if: success()
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: main
          fetch-depth: 0

      - name: Set up Git
        run: |
          git config --global user.name "hanchangmeo"
          git config --global user.email "hanchiangzo@gmail.com"

      - name: Fetch dev branch
        run: git fetch origin dev

      - name: Merge Passed Rules to Main
        run: |
          if [ ! -f "passed_rules.txt" ]; then
            echo "Error: passed_rules.txt not found!"
            exit 1
          fi

          while IFS= read -r rule; do
            git checkout origin/dev -- "rules/$rule"
          done < passed_rules.txt

          git status
          if [ -z "$(git status --porcelain)" ]; then
            echo "No changes to commit."
            exit 0
          fi

          git add rules/
          git commit -m "Merge passed Sigma rules from dev to main"
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
